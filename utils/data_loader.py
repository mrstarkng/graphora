import streamlit as st
import pandas as pd
import os

# X√°c ƒë·ªãnh ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi ƒë·∫øn th∆∞ m·ª•c data
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) # L·∫•y th∆∞ m·ª•c g·ªëc c·ªßa d·ª± √°n
DATA_DIR = os.path.join(BASE_DIR, 'data')

@st.cache_data # S·ª≠ d·ª•ng cache ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô t·∫£i l·∫°i
def load_data(file_name="train_and_val.csv"):
    """Loads data from the data directory."""
    file_path = os.path.join(DATA_DIR, file_name)
    try:
        with st.spinner(f"üì• Loading {file_name}... Please wait!"):
            if file_name.endswith('.csv'):
                return pd.read_csv(file_path)
            elif file_name.endswith('.xlsx'):
                 # C·∫ßn c√†i ƒë·∫∑t openpyxl: pip install openpyxl
                return pd.read_excel(file_path)
            else:
                st.error(f"Unsupported file format: {file_name}")
                return None
    except FileNotFoundError:
        st.error(f"Error: File not found at {file_path}")
        return None
    except Exception as e:
        st.error(f"An error occurred while loading {file_name}: {e}")
        return None

# Th√™m c√°c h√†m load d·ªØ li·ªáu kh√°c n·∫øu c·∫ßn (v√≠ d·ª• load X_train, y_train...)
@st.cache_data
def load_split_data():
    """Loads pre-split training and testing data."""
    try:
        X_train = pd.read_csv(os.path.join(DATA_DIR, 'X_train.csv')) # Gi·∫£ s·ª≠ c√≥ file n√†y
        y_train = pd.read_csv(os.path.join(DATA_DIR, 'y_train.csv')) # Gi·∫£ s·ª≠ c√≥ file n√†y
        X_test = pd.read_csv(os.path.join(DATA_DIR, 'X_test.csv'))   # Gi·∫£ s·ª≠ c√≥ file n√†y
        y_test = pd.read_csv(os.path.join(DATA_DIR, 'y_test.csv'))   # Gi·∫£ s·ª≠ c√≥ file n√†y
        # L∆∞u √Ω: y th∆∞·ªùng l√† Series, c·∫ßn ƒëi·ªÅu ch·ªânh n·∫øu file csv ch·ªâ c√≥ 1 c·ªôt
        y_train = y_train.iloc[:, 0] # L·∫•y c·ªôt ƒë·∫ßu ti√™n l√†m Series
        y_test = y_test.iloc[:, 0]   # L·∫•y c·ªôt ƒë·∫ßu ti√™n l√†m Series
        return X_train, X_test, y_train, y_test
    except FileNotFoundError as e:
        st.error(f"Error loading split data: {e}. Please ensure pre-split files exist.")
        return None, None, None, None
    except Exception as e:
        st.error(f"An error occurred loading split data: {e}")
        return None, None, None, None